[
  {
    "uri": {
      "specId": "petstore",
      "type": "specification",
      "identifier": "petstore"
    },
    "description": "A sample Pet Store API with nested schemas and allOf combinations",
    "operations": [
      {
        "path": "/pets",
        "method": "get",
        "operationId": "listPets"
      },
      {
        "path": "/pets",
        "method": "post",
        "operationId": "createPet"
      },
      {
        "path": "/pets/{petId}/vaccinations",
        "method": "get",
        "operationId": "getPetVaccinations"
      }
    ],
    "schemas": [
      {
        "name": "Error"
      },
      {
        "name": "Animal"
      },
      {
        "name": "Pet"
      },
      {
        "name": "Owner"
      },
      {
        "name": "PetWithVaccinations"
      }
    ]
  },
  {
    "uri": {
      "specId": "task-management",
      "type": "specification",
      "identifier": "task-management"
    },
    "description": "A Task Management API with complex parameter schemas and empty allOf combinations",
    "operations": [
      {
        "path": "/tasks",
        "method": "get",
        "operationId": "listTasks"
      },
      {
        "path": "/tasks",
        "method": "post",
        "operationId": "createTask"
      },
      {
        "path": "/tasks/{taskId}/status",
        "method": "put",
        "operationId": "updateTaskStatus"
      }
    ],
    "schemas": [
      {
        "name": "Error"
      },
      {
        "name": "TaskStatus"
      },
      {
        "name": "TaskPriority"
      },
      {
        "name": "BaseTask"
      },
      {
        "name": "Task"
      },
      {
        "name": "EmptyAllOfTask"
      },
      {
        "name": "TaskFilter"
      }
    ]
  },
  {
    "uri": {
      "specId": "user-management",
      "type": "specification",
      "identifier": "user-management"
    },
    "description": "A User Management API with references between User and Group schemas",
    "operations": [
      {
        "path": "/users",
        "method": "get",
        "operationId": "listUsers"
      },
      {
        "path": "/groups",
        "method": "get",
        "operationId": "listGroups"
      },
      {
        "path": "/groups/{groupId}/members",
        "method": "post",
        "operationId": "addUserToGroup"
      }
    ],
    "schemas": [
      {
        "name": "Error"
      },
      {
        "name": "User"
      },
      {
        "name": "Group"
      },
      {
        "name": "UserWithoutGroups"
      },
      {
        "name": "GroupWithoutUsers"
      }
    ]
  }
]